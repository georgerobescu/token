{
  "address": "0x7bc06c482DEAd17c0e297aFbC32f6e63d3846650",
  "abi": [],
  "transactionHash": "0xc2fb1ad558f84c3fc9bcb465caedf6dabc08cbf8b90e5923c56ac1caadce5ee4",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x7bc06c482DEAd17c0e297aFbC32f6e63d3846650",
    "transactionIndex": 0,
    "gasUsed": "291336",
    "logsBloom": "0x
    "blockHash": "0xdc9029416b378dd361d3785cdf625f0b3de36fc7b29ce4f9d9ac55ff5775c1c1",
    "transactionHash": "0xc2fb1ad558f84c3fc9bcb465caedf6dabc08cbf8b90e5923c56ac1caadce5ee4",
    "logs": [],
    "blockNumber": 13187930,
    "cumulativeGasUsed": "291336",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "b8cbcf737d27e3d245bd7e48202e4bc2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Utils.sol\":\"Utils\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.2;\\n\\nlibrary Utils {\\n  using Utils for Unlock;\\n  using Utils for Vest;\\n\\n  struct Vest {\\n    uint shortAmnt;\\n    uint longAmnt;\\n    uint lastUpdate;\\n  }\\n\\n  struct Unlock {\\n    uint unlockAmnt;\\n    uint unlockTime;\\n  }\\n\\n  // note: we should be able to unlock all tokens (including vested tokens)\\n  function unlock(Unlock storage self, uint amount , uint lockTime) internal {\\n    self.unlockAmnt = amount;\\n    self.unlockTime = block.timestamp + lockTime;\\n  }\\n\\n  function useUnlocked(Unlock storage self, uint amount) internal {\\n    require(self.unlockTime <= block.timestamp, \\\"sRel Utils: tokens are not unlocked yet\\\");\\n    require(self.unlockAmnt >= amount, \\\"sRel Utils: tokens should be unlocked before transfer\\\");\\n\\n    self.unlockAmnt -= amount;  // update locked amount;\\n  }\\n\\n  function resetLock(Unlock storage self) internal {\\n    self.unlockAmnt = 0;\\n    self.unlockTime = 0;\\n  }\\n\\n\\n  function transferVestedTokens(Vest storage self, Vest storage vestTo) internal {\\n    require(self.vested() > 0, \\\"sRel Utils: nothing to transfer\\\");\\n    require(vestTo.vested() == 0, \\\"sRel Utils: cannot transfer to account with vested tokens\\\");\\n\\n    vestTo.shortAmnt = self.shortAmnt;\\n    vestTo.longAmnt = self.longAmnt;\\n    vestTo.lastUpdate = self.lastUpdate;\\n    \\n    // reset initial vest\\n    self.shortAmnt = 0;\\n    self.longAmnt = 0;\\n    self.lastUpdate = 0;\\n  }\\n\\n  function setVestedAmount(Vest storage self, uint shortAmnt, uint longAmnt) public {\\n    require(self.shortAmnt + self.longAmnt == 0, \\\"sRel Utils: this account already has vested tokens\\\");\\n    if (shortAmnt > 0)\\n      self.shortAmnt = shortAmnt;\\n\\n    if (longAmnt > 0)\\n      self.longAmnt = longAmnt;\\n    \\n    self.lastUpdate = 0;\\n  }\\n\\n  function vested(Vest storage self) internal view returns (uint) {\\n    return self.shortAmnt + self.longAmnt;\\n  }\\n\\n  // this method updates long and short vesting amounts\\n  function updateVestedAmount(Vest storage self, uint vestShort, uint vestLong, uint vestBegin) public returns (uint) {\\n    require(block.timestamp > vestBegin, \\\"sRel Utils: Vesting has't started yet\\\");\\n    uint amount = 0;\\n    uint shortAmnt = self.shortAmnt;\\n    uint longAmnt = self.longAmnt;\\n    uint last = self.lastUpdate < vestBegin ? vestBegin : self.lastUpdate;\\n    \\n    if(shortAmnt > 0 && last < vestShort) {\\n      uint currentTime = block.timestamp < vestShort ? block.timestamp : vestShort;\\n      uint sAmnt = shortAmnt * (currentTime - last) / (vestShort - last);\\n      self.shortAmnt -= sAmnt;\\n      amount += sAmnt;\\n    }\\n\\n    if(longAmnt > 0 && last < vestLong) {\\n      uint currentTime = block.timestamp < vestLong ? block.timestamp : vestLong;\\n      uint lAmnt = longAmnt * (currentTime - last) / (vestLong - last);\\n      self.longAmnt -= lAmnt;\\n      amount += lAmnt;\\n    }\\n\\n    require(amount > 0, \\\"sRel Utils: There are no vested tokens to claim\\\");\\n    self.lastUpdate = block.timestamp;\\n\\n    return amount;\\n  }\\n}\",\"keccak256\":\"0xbc06e286f98f10b807fd0645d63cd28dec9a2f53eb19546418ebbb9bd40c2c5b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x61044e61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c8063997665ea14610045578063b300181414610077575b600080fd5b81801561005157600080fd5b50610065610060366004610360565b610099565b60405190815260200160405180910390f35b81801561008357600080fd5b50610097610092366004610334565b610297565b005b60008142116100fd5760405162461bcd60e51b815260206004820152602560248201527f7352656c205574696c733a2056657374696e672068617327742073746172746560448201526419081e595d60da1b60648201526084015b60405180910390fd5b845460018601546002870154600092919083908611610120578860020154610122565b855b905060008311801561013357508781105b156101a05760008842106101475788610149565b425b90506000610157838b6103eb565b61016184846103eb565b61016b90876103cc565b61017591906103aa565b9050808b600001600082825461018b91906103eb565b9091555061019b90508187610392565b955050505b6000821180156101af57508681105b1561021c5760008742106101c357876101c5565b425b905060006101d3838a6103eb565b6101dd84846103eb565b6101e790866103cc565b6101f191906103aa565b9050808b600101600082825461020791906103eb565b9091555061021790508187610392565b955050505b600084116102845760405162461bcd60e51b815260206004820152602f60248201527f7352656c205574696c733a20546865726520617265206e6f207665737465642060448201526e746f6b656e7320746f20636c61696d60881b60648201526084016100f4565b5050426002880155509050949350505050565b600183015483546102a89190610392565b156103105760405162461bcd60e51b815260206004820152603260248201527f7352656c205574696c733a2074686973206163636f756e7420616c7265616479604482015271206861732076657374656420746f6b656e7360701b60648201526084016100f4565b811561031a578183555b801561032857600183018190555b50506000600290910155565b60008060006060848603121561034957600080fd5b505081359360208301359350604090920135919050565b6000806000806080858703121561037657600080fd5b5050823594602084013594506040840135936060013592509050565b600082198211156103a5576103a5610402565b500190565b6000826103c757634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156103e6576103e6610402565b500290565b6000828210156103fd576103fd610402565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220e0233d9285030fca257286a9849cc645836352e0b2d99b44c97cce3ebf24a1b864736f6c63430008060033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c8063997665ea14610045578063b300181414610077575b600080fd5b81801561005157600080fd5b50610065610060366004610360565b610099565b60405190815260200160405180910390f35b81801561008357600080fd5b50610097610092366004610334565b610297565b005b60008142116100fd5760405162461bcd60e51b815260206004820152602560248201527f7352656c205574696c733a2056657374696e672068617327742073746172746560448201526419081e595d60da1b60648201526084015b60405180910390fd5b845460018601546002870154600092919083908611610120578860020154610122565b855b905060008311801561013357508781105b156101a05760008842106101475788610149565b425b90506000610157838b6103eb565b61016184846103eb565b61016b90876103cc565b61017591906103aa565b9050808b600001600082825461018b91906103eb565b9091555061019b90508187610392565b955050505b6000821180156101af57508681105b1561021c5760008742106101c357876101c5565b425b905060006101d3838a6103eb565b6101dd84846103eb565b6101e790866103cc565b6101f191906103aa565b9050808b600101600082825461020791906103eb565b9091555061021790508187610392565b955050505b600084116102845760405162461bcd60e51b815260206004820152602f60248201527f7352656c205574696c733a20546865726520617265206e6f207665737465642060448201526e746f6b656e7320746f20636c61696d60881b60648201526084016100f4565b5050426002880155509050949350505050565b600183015483546102a89190610392565b156103105760405162461bcd60e51b815260206004820152603260248201527f7352656c205574696c733a2074686973206163636f756e7420616c7265616479604482015271206861732076657374656420746f6b656e7360701b60648201526084016100f4565b811561031a578183555b801561032857600183018190555b50506000600290910155565b60008060006060848603121561034957600080fd5b505081359360208301359350604090920135919050565b6000806000806080858703121561037657600080fd5b5050823594602084013594506040840135936060013592509050565b600082198211156103a5576103a5610402565b500190565b6000826103c757634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156103e6576103e6610402565b500290565b6000828210156103fd576103fd610402565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220e0233d9285030fca257286a9849cc645836352e0b2d99b44c97cce3ebf24a1b864736f6c63430008060033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}